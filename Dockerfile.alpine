FROM alpine:3.7
MAINTAINER wekan

# Declare Arguments
ARG NODE_VERSION
ARG METEOR_RELEASE
ARG METEOR_EDGE
ARG USE_EDGE
ARG NPM_VERSION
ARG FIBERS_VERSION
ARG ARCHITECTURE
ARG SRC_PATH

# Set the environment variables (defaults where required)
# paxctl fix for alpine linux: https://github.com/wekan/wekan/issues/1303
ENV BUILD_DEPS="gnupg wget curl bzip2 alpine-sdk python git ca-certificates musl@testing paxctl musl-dev musl nodejs"
ENV NODE_VERSION ${NODE_VERSION:-v8.9.3}
ENV METEOR_RELEASE ${METEOR_RELEASE:-1.6.0.1}
ENV USE_EDGE ${USE_EDGE:-false}
ENV METEOR_EDGE ${METEOR_EDGE:-1.5-beta.17}
ENV NPM_VERSION ${NPM_VERSION:-5.5.1}
ENV FIBERS_VERSION ${FIBERS_VERSION:-2.0.0}
ENV ARCHITECTURE ${ARCHITECTURE:-linux-x64}
ENV SRC_PATH ${SRC_PATH:-./}

ENV GOSU_VERSION="1.9"
ENV GOSU_DOWNLOAD_URL="https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64"
ENV GOSU_DOWNLOAD_SIG="https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64.asc"
ENV GOSU_DOWNLOAD_KEY="0x036A9C25BF357DD4"

# Copy the app to the image
COPY ${SRC_PATH} /home/wekan/app

RUN \
    # Add non-root user wekan
    addgroup -S wekan && \
    adduser -S -h /home/wekan -G wekan wekan && \
    chown -R wekan.wekan /home/wekan && \
    \
    # OS dependencies
    apk add --no-cache ${BUILD_DEPS} && \
    \
    # Install gosu
    set -x && \
	  gpg-agent --daemon && \
    gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$GOSU_DOWNLOAD_KEY" || \
    gpg --keyserver pgp.mit.edu --recv-keys "$GOSU_DOWNLOAD_KEY" || \
    gpg --keyserver keyserver.pgp.com --recv-keys "$GOSU_DOWNLOAD_KEY" && \
	  echo "trusted-key $GOSU_DOWNLOAD_KEY" >> /root/.gnupg/gpg.conf && \
	  curl -sSL "$GOSU_DOWNLOAD_URL" > gosu-amd64 && \
	  curl -sSL "$GOSU_DOWNLOAD_SIG" > gosu-amd64.asc && \
	  gpg --verify gosu-amd64.asc && \
	  rm -f gosu-amd64.asc && \
	  mv gosu-amd64 /usr/bin/gosu && \
	  chmod +x /usr/bin/gosu && \
    \
    # Install Node dependencies
    mkdir -p /usr/lib/node_modules/fibers && \
    chmod a+rw /usr/lib/node_modules/fibers && \
    gosu root npm install -g npm@${NPM_VERSION} && \
    gosu root npm install -g node-gyp && \
    gosu root npm install -g fibers@${FIBERS_VERSION} && \
    \
    # Change user to wekan and install meteor
    cd /home/wekan/ && \
    chown wekan:wekan --recursive /home/wekan && \
    curl https://install.meteor.com -o /home/wekan/install_meteor.sh && \
    sed -i "s|RELEASE=.*|RELEASE=${METEOR_RELEASE}\"\"|g" ./install_meteor.sh && \
    echo "Starting meteor ${METEOR_RELEASE} installation...   \n" && \
    chown wekan:wekan /home/wekan/install_meteor.sh && \
    \
    # Check if opting for a release candidate instead of major release
    if [ "$USE_EDGE" = false ]; then \
      echo "install meteor" && \
      gosu wekan:wekan sh /home/wekan/install_meteor.sh; \
    else \
      gosu wekan:wekan git clone --recursive --depth 1 -b release/METEOR@${METEOR_EDGE} git://github.com/meteor/meteor.git /home/wekan/.meteor; \
    fi; \
    \
    # Get additional packages
    mkdir -p /home/wekan/app/packages && \
    chown wekan:wekan --recursive /home/wekan && \
    cd /home/wekan/app/packages && \
    gosu wekan:wekan git clone --depth 1 -b master git://github.com/wekan/flow-router.git kadira-flow-router && \
    gosu wekan:wekan git clone --depth 1 -b master git://github.com/meteor-useraccounts/core.git meteor-useraccounts-core && \
    sed -i 's/api\.versionsFrom/\/\/api.versionsFrom/' /home/wekan/app/packages/meteor-useraccounts-core/package.js && \
    cd /home/wekan/.meteor && \
    gosu wekan:wekan /home/wekan/.meteor/meteor -- help; \
    \
    # Build app
    cd /home/wekan/app && \
    gosu wekan:wekan /home/wekan/.meteor/meteor add standard-minifier-js && \
    gosu wekan:wekan /home/wekan/.meteor/meteor npm install && \
    gosu wekan:wekan /home/wekan/.meteor/meteor build --directory /home/wekan/app_build && \
    cp /home/wekan/app/fix-download-unicode/cfs_access-point.txt /home/wekan/app_build/bundle/programs/server/packages/cfs_access-point.js && \
    chown wekan:wekan /home/wekan/app_build/bundle/programs/server/packages/cfs_access-point.js && \
    cd /home/wekan/app_build/bundle/programs/server/npm/node_modules/meteor/npm-bcrypt && \
    gosu wekan:wekan rm -rf node_modules/bcrypt && \
    gosu wekan:wekan npm install bcrypt && \
    cd /home/wekan/app_build/bundle/programs/server/ && \
    gosu wekan:wekan npm install && \
    gosu wekan:wekan npm install bcrypt && \
    mv /home/wekan/app_build/bundle /build && \
    \
    # Cleanup
    rm -rf /var/cache/apk/* && \
    rm -R /home/wekan/.meteor && \
    rm -R /home/wekan/app && \
    rm -R /home/wekan/app_build && \
    rm /home/wekan/install_meteor.sh

ENV PORT=80
EXPOSE $PORT

CMD ["node", "/build/main.js"]
